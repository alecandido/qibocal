[tool.poetry]
name = "qcvv"
version = "0.0.0"
description = ""
authors = ["andrea-pasquale <andreapasquale97@gmail.com>"]
license = "Apache License 2.0"
readme = "README.md"
homepage = ""
repository = "https://github.com/qiboteam/qcvv/"
documentation = ""
keywords = []
classifiers=[
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Physics",
    ]

[tool.poetry.dependencies]
python = ">=3.7"
qibo = {git = "ssh://git@github.com/qiboteam/qibo.git", rev = "master"}
dash = "^2.6.0"

[tool.poetry.dev-dependencies]
black = "^22.6.0"
pylint = "2.12.2"
pre-commit = "^2.20.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
qq = "qcvv:command"
qq-live = "qcvv:live_plot"

[tool.poe.tasks]
test = "pytest tests"
lint = "pylint src/**/*.py -E"
lint-warnings = "pylint src/**/*.py --exit-zero"

[tool.pytest.ini_options]
addopts = [
    '--cov=qcvv',
    '--cov-report=xml'
]

[tool.pylint.master]
# extensions not to check
extension-pkg-whitelist = ["numpy"]
jobs = 1                                                          # has to be 1 as pylint is NOT threadsafe

[tool.pylint.messages_control]
disable = ["invalid-name", "fixme"]

[tool.pylint.reports]
# Available formats are:
# text, parseable, colorized, json and msvs (visual studio).
output-format = "colorized"

[tool.pylint.format]
# Maximum number of characters on a single line.
max-line-length = 100

[tool.pylint.design]
# Maximum number of arguments for function / method
max-args = 10
